types = {
    "root": {
        1: ("enum MsgCmdType", "msgtype"),
        2: ("enum MsgDevice", "sender"),
        3: ("enum MsgDevice", "receiver"),
        4: ("enum MsgAttr", "msgattr"),
        5: ("int32", "seqs"),
        6: ("int32", "version"),
        7: ("int32", "subtype"),
        8: ("CommEsp", "subMsg"),
        10: ("MctlSys", "subMsg"),
        11: ("MctlNav", "subMsg"),
        12: ("MctlDriver", "subMsg"),
        14: ("MsgNull", "subMsg"),
        15: ("uint64", "timestamp")
    },
    "enum MsgCmdType": {
        0: "START",
        240: "NAV",
        241: "LOCALIZATION",
        242: "PLANNING",
        243: "EMBED_DRIVER",
        244: "EMBED_SYS",
        245: "EMBED_MIDWARE",
        246: "EMBED_OTA",
        247: "APPLICATION",
        248: "ESP",
        -1: "UNRECOGNIZED"
    },
    "enum MsgAttr": {
        0: "NONE",
        1: "REQ",
        2: "RESP",
        3: "REPORT",
        -1: "UNRECOGNIZED"
    },
    "enum MsgDevice": {
        0: "COMM_ESP",
        1: "MAINCTL",
        2: "LEFTMOTOR",
        3: "RIGHTMOTOR",
        4: "BASESTATION",
        5: "RTKCLI",
        6: "USBHOST",
        7: "MOBILEAPP",
        8: "IOTSERVER",
        9: "BMS",
        -1: "UNRECOGNIZED"
    },

    "CommEsp": {
        1: ("int32", "subtype"),
        2: ("enum EspSubTypeCase", "subtype"),
        3: ("DrvWifiUpload", "espSubType"),
        4: ("DrvWifiList", "espSubType"),
        5: ("DrvWifiSet", "espSubType"),
        6: ("DrvWifiMsg", "espSubType"),
        7: ("DrvWifiConf", "espSubType"),
        8: ("DrvListUpload", "espSubType"),
        9: ("DrvUploadFileReq", "espSubType"),
        10: ("DrvUploadFileCancel", "espSubType"),
        11: ("DrvDevInfoReq", "espSubType"),
        12: ("DrvDevInfoResp", "espSubType"),
        13: ("DrvUpgradeReport", "espSubType"),
        14: ("WifiIotStatusReport", "espSubType"),
        15: ("DrvUploadFileToAppReq", "espSubType"),
        16: ("DrvUploadFileToAppRsp", "espSubType"),
        17: ("GetNetworkInfoReq", "espSubType"),
        18: ("GetNetworkInfoRsp", "espSubType"),
    },
    "enum EspSubTypeCase": {
        1: "TODEV_BLE_SYNC",
        2: "TODEV_CONFTYPE",
        3: "TODEV_WIFIMSGUPLOAD",
        4: "TODEV_WIFILISTUPLOAD",
        5: "TODEV_WIFI_CONFIGURATION",
        6: "TOAPP_WIFIMSG",
        7: "TOAPP_WIFICONF",
        8: "TOAPP_LISTUPLOAD",
        9: "TODEV_REQ_LOG_INFO",
        10: "TODEV_LOG_DATA_CANCEL",
        11: "TODEV_DEVINFO_REQ",
        12: "TOAPP_DEVINFO_RESP",
        13: "TOAPP_UPGRADE_REPORT",
        14: "TOAPP_WIFI_IOT_STATUS",
        15: "TODEV_UPLOADFILE_REQ",
        16: "TOAPP_UPLOADFILE_RSP",
        17: "TODEV_NETWORKINFO_REQ",
        18: "TOAPP_NETWORKINFO_RSP",
        0: "ESPSUBTYPE_NOT_SET"
    },
    "DrvWifiUpload": {
        1: ("int32", "wifiMsgUpload"),
    },
    "DrvWifiList": {
        1: ("int32", "nVSWifiUpload"),
    },
    "DrvWifiSet": {
        1: ("int32", "configParam"),
        2: ("string", "confssid"),
    },
    "DrvWifiMsg": {
        1: ("bool", "status1"),
        2: ("bool", "status"),
        3: ("string", "IP"),
        4: ("string", "msgssid"),
        5: ("string", "password"),
        6: ("int32", "rssi"),
        7: ("string", "productKey"),
        8: ("string", "deviceName"),
    },
    "DrvWifiConf": {
        1: ("bool", "succFlag"),
        2: ("int32", "code"),
        3: ("string", "confssid"),
    },
    "DrvListUpload": {
        1: ("int32", "sum"),
        2: ("int32", "current"),
        3: ("int32", "status"),
        4: ("string", "memssid"),
        5: ("int32", "rssi"),
    },
    "DrvUploadFileReq": {
        1: ("string", "bizId"),
        2: ("string", "url"),
        3: ("string", "userId"),
        4: ("int32", "num"),
        5: ("int32", "type"),
    },
    "DrvUploadFileCancel": {
        1: ("int32", "bizId"),
    },
    "DrvDevInfoReq": {
        1: ("packed <int32>", "reqIds"),
    },
    "DrvDevInfoResp": {
        1: ("packed <int32>", "respIds"),
    },
    "DrvUpgradeReport": {
        1: ("string", "devname"),
        2: ("string", "otaid"),
        3: ("string", "version"),
        4: ("int32", "progress"),
        5: ("int32", "result"),
        6: ("string", "message"),
        7: ("string", "properties"),
    },
    "WifiIotStatusReport": {
        1: ("bool", "wifiConnected"),
        2: ("bool", "iotConnected"),
        3: ("string", "productKey"),
        4: ("string", "deviceName"),
    },
    "DrvUploadFileToAppReq": {
        1: ("string", "bizId"),
        2: ("int32", "operation"),
        3: ("fixed32", "serverIp"),
        4: ("int32", "serverPort"),
        5: ("int32", "num"),
        6: ("int32", "type"),
    },
    "DrvUploadFileToAppRsp": {
        1: ("string", "bizId"),
        2: ("int32", "operation"),
        3: ("int32", "result"),
    },
    "GetNetworkInfoReq": {
        1: ("int32", "reqIds"),
    },
    "GetNetworkInfoRsp": {
        1: ("int32", "reqIds"),
        2: ("string", "wifiSsid"),
        3: ("string", "wifiMac"),
        4: ("int32", "wifiRssi"),
        5: ("fixed32", "ip"),
        6: ("fixed32", "mask"),
        7: ("fixed32", "gateway"),
    },

    "MctlSys": {
        1: ("SysBatUp", "subSysMsg"),
        2: ("SysWorkState", "subSysMsg"),
        3: ("SysSetTimeZone", "subSysMsg"),
        4: ("SysSetDateTime", "subSysMsg"),
        6: ("SysJobPlan", "subSysMsg"),
        7: ("SysDevErrCode", "subSysMsg"),
        10: ("SysJobPlanTime", "subSysMsg"),
        11: ("SysMowInfo", "subSysMsg"),
        12: ("SysCommCmd", "subSysMsg"),
        14: ("int64", "subSysMsg"), # JobPlanDel?
        15: ("SysBorder", "subSysMsg"),
        18: ("SysPlanJobStatus", "subSysMsg"),
        19: ("SysUploadFileProgress", "subSysMsg"),
        20: ("SysDelJobPlan", "subSysMsg"),
        21: ("int32", "subSysMsg"),
        22: ("SysKnifeControl", "subSysMsg"),
        23: ("int32", "subSysMsg"),
        24: ("SysResetSystemStatus", "subSysMsg"),
        25: ("systemRapidStateTunnel_msg", "subSysMsg"),
        26: ("systemTardStateTunnel_msg", "subSysMsg"),
        27: ("systemUpdateBuf_msg", "subSysMsg"),
        28: ("TimeCtrlLight", "subSysMsg"),
        29: ("systemTmpCycleTx_msg", "subSysMsg"),
        30: ("SysOffChipFlash", "subSysMsg"),
        31: ("int32", "subSysMsg"),
        32: ("device_fw_info", "subSysMsg"),
        33: ("LoraCfgReq", "subSysMsg"),
        34: ("LoraCfgRsp", "subSysMsg"),
        35: ("mow_to_app_info_t", "subSysMsg"),
    },
    "SysBatUp": {
        1: ("int32", "batVal"),
    },
    "SysWorkState": {
        1: ("int32", "deviceState"),
        2: ("int32", "chargeState"),
        3: ("int64", "cmHash"),
        4: ("int64", "pathHash"),
    },
    "SysSetTimeZone": {
        1: ("int32", "timeStamp"),
        2: ("int32", "timeArea"),
    },
    "SysSetDateTime": {
        1: ("int32", "year"),
        2: ("int32", "month"),
        3: ("int32", "date"),
        4: ("int32", "week"),
        5: ("int32", "hours"),
        6: ("int32", "minutes"),
        7: ("int32", "seconds"),
        8: ("int32", "timeZone"),
        9: ("int32", "daylight"),
    },
    "SysJobPlan": {
        1: ("int64", "jobId"),
        2: ("int32", "jobMode"),
        3: ("int32", "rainTactics"),
        4: ("int32", "knifeHeight"),
    },
    "SysDevErrCode": {
        1: ("int32", "errorCode"),
    },
    "SysJobPlanTime": {
        1: ("int64", "planId"),
        2: ("int32", "startJobTime"),
        3: ("int32", "endJobTime"),
        4: ("int32", "timeInDay"),
        5: ("int32", "jobPlanMode"),
        6: ("int32", "jobPlanEnable"),
        # TODO: some weirdness regarding days of the week
        9: ("int32", "everyDay"),
        10: ("SysJobPlan", "jobPlan"),
    },
    "SysMowInfo": {
        1: ("int32", "deviceState"),
        2: ("int32", "batVal"),
        3: ("int32", "knifeHeight"),
        4: ("int32", "RTKstatus"),
        5: ("int32", "RTKstars"),
    },
    "SysCommCmd": {
        1: ("int32", "rw"),
        2: ("int32", "id"),
        3: ("int32", "context"),
    },
    "SysBorder": {
        1: ("int32", "borderVal"),
    },
    "SysPlanJobStatus": {
        1: ("int32", "planjobStatus"),
    },
    "SysUploadFileProgress": {
        1: ("string", "bizId"),
        2: ("int32", "result"),
        3: ("int32", "progress"),
    },
    "SysDelJobPlan": {
        1: ("string", "deviceId"),
        2: ("string", "planId"),
    },
    "SysKnifeControl": {
        1: ("int32", "knifeStatus"),
        2: ("int32", "knifeHeight"),
    },
    "SysResetSystemStatus": {
        1: ("int32", "resetStatus"),
    },
    "systemRapidStateTunnel_msg": {},
    "systemTardStateTunnel_msg": {},
    "systemUpdateBuf_msg": {},
    "TimeCtrlLight": {
        1: ("int32", "operate"),
        2: ("int32", "enable"),
        3: ("int32", "startHour"),
        4: ("int32", "startMin"),
        5: ("int32", "endHour"),
        6: ("int32", "endMin"),
        7: ("int32", "action"),
    },
    "systemTmpCycleTx_msg": {},
    "SysOffChipFlash": {
        1: ("enum Operation", "op"),
        2: ("enum OffPartId", "id"),
        3: ("uint32", "startAddr"),
        4: ("uint32", "offset"),
        5: ("int32", "length"),
        6: ("bytes", "data"),
        7: ("int32", "code"),
        8: ("string", "msg"),
    },
    "enum Operation": {
        0: "WRITE",
        1: "READ",
        2: "ERASE",
        -1: "UNRECOGNIZED",
    },
    "enum OffPartId": {
        0: "OFF_PART_DL_IMG",
        1: "OFF_PART_UPDINFO_BACK",
        2: "OFF_PART_UPDINFO",
        3: "OFF_PART_NAKEDB",
        4: "OFF_PART_FLASHDB",
        5: "OFF_PART_UPD_APP_IMG",
        6: "OFF_PART_UPD_BMS_IMG",
        7: "OFF_PART_UPD_TMP_IMG",
        8: "OFF_PART_DEV_INFO",
        9: "OFF_PART_NAKEDB_BACK",
        10: "OFF_PART_MAX",
        -1: "UNRECOGNIZED",
    },
    "device_fw_info": {
        1: ("int32", "result"),
        2: ("string", "version"),
        3: ("packed <string>", "mod"),
    },
    "LoraCfgReq": {
        1: ("int32", "op"),
        2: ("string", "cfg"),
    },
    "LoraCfgRsp": {
        1: ("int32", "result"),
        2: ("int32", "op"),
        3: ("string", "cfg"),
        4: ("string", "facCfg"),
    },
    "mow_to_app_info_t": {
        1: ("int32", "type"),
        2: ("int32", "cmd"),
        # TODO: weirdness regarding mowData
    },

    "MctlNav": {
        1: ("NavLatLonUp", "subNavMsg"),
        2: ("NavPosUp", "subNavMsg"),
        3: ("NavCHlLineData", "subNavMsg"),
        4: ("NavTaskInfo", "subNavMsg"),
        5: ("NavOptLineUp", "subNavMsg"),
        6: ("NavOptiBorderInfo", "subNavMsg"),
        7: ("NavOptObsInfo", "subNavMsg"),
        8: ("NavResFrame", "subNavMsg"),
        9: ("NavResFrame", "subNavMsg"),
        10: ("NavResFrame", "subNavMsg"),
        11: ("NavResFrame", "subNavMsg"),
        12: ("chargePileType", "subNavMsg"),
        13: ("int32", "subNavMsg"),  # SUSTASK
        14: ("int32", "subNavMsg"),  # RECHGCMD
        15: ("int32", "subNavMsg"),  # EDGECMD
        16: ("int32", "subNavMsg"),  # DRAW_BORDER
        17: ("int32", "subNavMsg"),  # DRAW_BORDER_END
        18: ("int32", "subNavMsg"),  # DRAW_OBS
        19: ("int32", "subNavMsg"),  # DRAW_OBS_END
        20: ("int32", "subNavMsg"),  # CHL_LINE
        21: ("int32", "subNavMsg"),  # CHL_LINE_END
        22: ("int32", "subNavMsg"),  # SAVE_TASK
        23: ("int32", "subNavMsg"),  # CANCEL_SUSCMD
        24: ("int32", "subNavMsg"),  # RESET_CHG_PILE
        25: ("int32", "subNavMsg"),  # CANCEL_DRAW_CMD
        26: ("int32", "subNavMsg"),  # ONE_TOUCH_LEAVE_PILE
        27: ("NavStartJob", "subNavMsg"),
        28: ("NavBorderState", "subNavMsg"),
        29: ("int32", "subNavMsg"),  # LAT_UP_ACK
        30: ("NavGetHashList", "subNavMsg"),
        31: ("NavGetHashListAck", "subNavMsg"),
        32: ("NavGetCommData", "subNavMsg"),
        33: ("NavGetCommDataAck", "subNavMsg"),
        34: ("NavReqCoverPath", "subNavMsg"),
        35: ("NavUploadZigZagResult", "subNavMsg"),
        36: ("NavUploadZigZagResultAck", "subNavMsg"),
        37: ("NavTaskCtrl", "subNavMsg"),
        38: ("NavTaskIdRw", "subNavMsg"),
        39: ("NavTaskBreakPoint", "subNavMsg"),
        40: ("NavPlanJobSet", "subNavMsg"),
        41: ("NavUnableTimeSet", "subNavMsg"),
        42: ("SimulationCmdData", "subNavMsg"),
        43: ("WorkReportUpdateCmd", "subNavMsg"),
        44: ("WorkReportUpdateAck", "subNavMsg"),
        45: ("WorkReportCmdData", "subNavMsg"),
        46: ("WorkReportInfoAck", "subNavMsg"),
    },
    "NavLatLonUp": {
        1: ("double", "lat"),
        2: ("double", "lon"),
    },
    "NavPosUp": {
        1: ("float", "x"),
        2: ("float", "y"),
        3: ("int32", "status"),
        4: ("int32", "toward"),
        5: ("int32", "stars"),
        6: ("float", "age"),
        7: ("float", "latStddev"),
        8: ("float", "lonStddev"),
        9: ("int32", "l2DfStars"),
        10: ("int32", "posType"),
        11: ("int64", "cHashId"),
        12: ("int32", "posLevel"),
    },
    "NavCHlLineData": {
        1: ("int32", "startJobRI"),
        2: ("int32", "endJobRI"),
        3: ("int32", "currentFrame"),
        4: ("int32", "channelLineLen"),
    },
    "NavTaskInfo": {
        1: ("int32", "area"),
        2: ("int32", "time"),
        3: ("int32", "allFrame"),
        4: ("int32", "currentFrame"),
        5: ("int32", "pathlen"),
        6: ("packed <CommDataCouple>", "dc"),
    },
    "CommDataCouple": {
        1: ("float", "x"),
        2: ("float", "y"),
    },
    "NavOptLineUp": {
        1: ("int32", "startJobRI"),
        2: ("int32", "endJobRI"),
        3: ("int32", "allFrame"),
        4: ("int32", "currentFrame"),
        5: ("int32", "channelDataLen"),
        6: ("packed <CommDataCouple>", "dc"),
    },
    "NavOptiBorderInfo": {
        1: ("int32", "jobId"),
        2: ("int32", "allFrame"),
        3: ("int32", "currentFrame"),
        4: ("int32", "borderDataLen"),
        5: ("packed <CommDataCouple>", "dc"),
    },
    "NavOptObsInfo": {
        1: ("int32", "obstacleId"),
        2: ("int32", "allFrame"),
        3: ("int32", "currentFrame"),
        4: ("int32", "obstacleDataLen"),
        5: ("packed <CommDataCouple>", "dc"),
    },
    "NavResFrame": {
        1: ("int32", "frameId"),
    },
    "chargePileType": {
        1: ("int32", "toward"),
        2: ("float", "x"),
        3: ("float", "y"),
    },
    "NavStartJob": {
        1: ("int64", "jobId"),
        2: ("int32", "jobVer"),
        3: ("int32", "jobMode"),
        4: ("int32", "rainTactics"),
        5: ("int32", "kinfeHeight"),
        6: ("float", "speed"),
        7: ("int32", "channelWidth"),
        8: ("int32", "ultraWave"),
        9: ("int32", "channelMode"),
    },
    "NavBorderState": {
        1: ("int32", "bdstate"),
    },
    "NavGetHashList": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("int32", "totalFrame"),
        4: ("int32", "currentFrame"),
        5: ("fixed64", "dataHash"),
        6: ("string", "reserved"),
    },
    "NavGetHashListAck": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("int32", "totalFrame"),
        4: ("int32", "currentFrame"),
        5: ("fixed64", "dataHash"),
        6: ("int32", "hashLen"),
        7: ("string", "reserved"),
        # TODO: weirdness regardness dataCouple
    },
    "NavGetCommData": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("int32", "action"),
        4: ("int32", "type"),
        5: ("int64", "hash"),
        6: ("int64", "paternalHashA"),
        7: ("int64", "paternalHashB"),
        8: ("int32", "totalFrame"),
        9: ("int32", "currentFrame"),
        10: ("fixed64", "dataHash"),
        11: ("string", "reserved"),
    },
    "NavGetCommDataAck": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("int32", "result"),
        4: ("int32", "action"),
        5: ("int32", "type"),
        6: ("fixed64", "hash"),
        7: ("fixed64", "paternalHashA"),
        8: ("fixed64", "paternalHashB"),
        9: ("int32", "totalFrame"),
        10: ("int32", "currentFrame"),
        11: ("fixed64", "dataHash"),
        12: ("int32", "dataLen"),
        13: ("packed <CommDataCouple>", "dataCouple"),
        14: ("string", "reserved"),
    },
    "NavReqCoverPath": {
        1: ("int32", "pver"),
        2: ("fixed64", "jobId"),
        3: ("int32", "jobVer"),
        4: ("int32", "jobMode"),
        5: ("int32", "subCmd"),
        6: ("int32", "edgeMode"),
        7: ("int32", "knifeHeight"),
        8: ("int32", "channelWidth"),
        9: ("int32", "ultraWave"),
        10: ("int32", "channelMode"),
        11: ("int32", "toward"),
        12: ("float", "speed"),
        # TODO: weirdness regarding zones
        14: ("fixed64", "pathHash"),
        15: ("string", "reserved"),
        16: ("int32", "result"),
    },
    "NavUploadZigZagResult": {
        1: ("int32", "pver"),
        2: ("fixed64", "jobId"),
        3: ("int32", "jobVer"),
        4: ("int32", "result"),
        5: ("int32", "area"),
        6: ("int32", "time"),
        7: ("int32", "totalZoneNum"),
        8: ("int32", "currentZonePathNum"),
        9: ("int32", "currentZonePathId"),
        10: ("int32", "currentZone"),
        11: ("fixed64", "currentHash"),
        12: ("int32", "totalFrame"),
        13: ("int32", "currentFrame"),
        14: ("int32", "channelMode"),
        15: ("int32", "channelModeId"),
        16: ("fixed64", "dataHash"),
        17: ("int32", "dataLen"),
        18: ("string", "reserved"),
        19: ("packed <CommDataCouple>", "dataCouple"),
        20: ("int32", "subCmd"),
    },
    "NavUploadZigZagResultAck": {
        1: ("int32", "pver"),
        2: ("int32", "currentZone"),
        3: ("fixed64", "currentHash"),
        4: ("int32", "totalFrame"),
        5: ("int32", "currentFrame"),
        6: ("fixed64", "dataHash"),
        7: ("string", "reserved"),
        8: ("int32", "subCmd"),
    },
    "NavTaskCtrl": {
        1: ("int32", "type"),
        2: ("int32", "action"),
        3: ("int32", "result"),
        4: ("string", "reserved"),
    },
    "NavTaskIdRw": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("string", "taskName"),
        4: ("string", "taskId"),
        5: ("int32", "result"),
        6: ("string", "reserved"),
    },
    "NavTaskBreakPoint": {
        1: ("float", "x"),
        2: ("float", "y"),
        3: ("int32", "toward"),
        4: ("int32", "flag"),
        5: ("int32", "action"),
        6: ("fixed64", "zoneHash"),
    },
    "NavPlanJobSet": {
        1: ("int32", "pver"),
        2: ("int32", "subCmd"),
        3: ("int32", "area"),
        4: ("int32", "workTime"),
        5: ("string", "version"),
        6: ("string", "id"),
        7: ("string", "userId"),
        8: ("string", "deviceId"),
        9: ("string", "planId"),
        10: ("string", "taskId"),
        11: ("string", "jobId"),
        12: ("string", "startTime"),
        13: ("string", "endTime"),
        14: ("int32", "week"),
        15: ("int32", "knifeHeight"),
        16: ("int32", "model"),
        17: ("int32", "edgeMode"),
        18: ("int32", "requiredTime"),
        19: ("int32", "routeAngle"),
        20: ("int32", "routeModel"),
        21: ("int32", "routeSpacing"),
        22: ("int32", "ultrasonicBarrier"),
        23: ("int32", "totalPlanNum"),
        24: ("int32", "planIndex"),
        25: ("int32", "result"),
        26: ("float", "speed"),
        27: ("string", "taskName"),
        28: ("string", "jobName"),
        # TODO: weirdness regarding zones
        30: ("string", "reserved"),
    },
    "NavUnableTimeSet": {
        1: ("int32", "subCmd"),
        2: ("string", "deviceId"),
        3: ("string", "unableStartTime"),
        4: ("string", "unableEndTime"),
        5: ("int32", "result"),
        6: ("string", "reserved"),
    },
    "SimulationCmdData": {
        1: ("int32", "subCmd"),
        2: ("int32", "paramId"),
        # TODO: weirdness
    },
    "WorkReportUpdateCmd": {
        1: ("int32", "subCmd"),
    },
    "WorkReportUpdateAck": {
        1: ("bool", "updateFlag"),
        2: ("int32", "infoNum"),
    },
    "WorkReportCmdData": {
        1: ("int32", "subCmd"),
        2: ("int32", "getInfoNum"),
    },
    "WorkReportInfoAck": {
        1: ("bool", "interruptFlag"),
        2: ("int64", "startWorkTime"),
        3: ("int64", "endWorkTime"),
        4: ("int32", "workTimeUsed"),
        5: ("double", "workAres"),
        6: ("int32", "workProgress"),
        7: ("int32", "heightOfKnife"),
        8: ("int32", "workType"),
        9: ("int32", "workResult"),
        10: ("int32", "totalAckNum"),
        11: ("int32", "currentAckNum"),
    },

    "MctlDriver": {
        1: ("DrvMotionCtrl", "subDrvMsg"),
        2: ("DrvKnifeHeight", "subDrvMsg"),
        3: ("DrvSrSpeed", "subDrvMsg"),
        4: ("DrvKnifeHeight", "subDrvMsg"),
        5: ("DrvKnifeStatus", "subDrvMsg"),
    },
    "DrvMotionCtrl": {
        1: ("int32", "setLinearSpeed"),
        2: ("int32", "setAngularSpeed"),
    },
    "DrvKnifeHeight": {
        1: ("int32", "knifeHeight"),
    },
    "DrvSrSpeed": {
        1: ("int32", "rw"),
        2: ("float", "speed"),
    },
    "DrvKnifeStatus": {
        1: ("int32", "knifeStatus"),
    },

    "MsgNull": {}
}

if __name__ == "__main__":
    with open("luba.proto", "w") as f:
        f.write('syntax = "proto2";\n\n')
        for k, v in types.items():
            if k.startswith("enum "):
                f.write(f"enum {k.replace('enum ', '')} " + "{\n")
                for v_k, v_v in v.items():
                    f.write(f"    {k.replace('enum ', '')}_{v_v} = {v_k};\n")
                f.write("}\n\n")
            else:
                f.write(f"message {'Root' if k == 'root' else k} " + "{\n")
                for v_k, (v_type, v_name) in v.items():
                    if v_type.startswith("packed <"):
                        f.write(f"    repeated {v_type.replace('packed <', '').replace('>', '')} {v_name} = {v_k};\n")
                    else:
                        f.write(f"    optional {v_type.replace('enum ', '')} {v_name} = {v_k};\n")
                f.write("}\n\n")
